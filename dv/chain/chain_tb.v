/*
    Automatically generated by Fault
    Do not modify.
    Generated on: 2021-01-29 09:40:43
*/

`include "/home/ma/ef/openlane/pdks/sky130A/libs.ref/sky130_fd_sc_hd/verilog/primitives.v"
`include "/home/ma/ef/openlane/pdks/sky130A/libs.ref/sky130_fd_sc_hd/verilog/sky130_fd_sc_hd.v"
`include "/home/ma/ef/Fault-SPM/openlane/spm_top/runs/spm_top/results/dft/spm_top.chained.v"

module testbench;
    reg[31:0] \mp ;
    reg[0:0] \shift ;
    reg[31:0] \mc ;
    wire[0:0] \sout ;
    wire[0:0] \done ;
    reg[0:0] \tck ;
    reg[0:0] \rst ;
    reg[0:0] \start ;
    reg[0:0] \test ;
    reg[0:0] \clk ;
    reg[0:0] \sin ;
    wire[63:0] \prod ;

        always #1 clk = ~clk; 
        always #1 tck = ~tck; 

    spm_top uut(
        .\mp ( \mp ) , .\shift ( \shift ) , .\mc ( \mc ) , .\sout ( \sout ) , .\done ( \done ) , .\tck ( \tck ) , .\rst ( \rst ) , .\start ( \start ) , .\test ( \test ) , .\clk ( \clk ) , .\sin ( \sin ) , .\prod ( \prod ) 
    ); 

    wire[331:0] serializable =
        332'b01011000110110111111000110100101101101010001011100001001100101110011100000010001101010001111110001011011011101010100011111111100101111000100011101111010011011101000000011011010110110001110110000101011010110101100011001110001101001100101001001111111110000100011000000110100110000111011101001100000010001000110010111100101100101000110;
    reg[331:0] serial;
    integer i;
    initial begin
        $dumpfile("chain2.vcd");
        $dumpvars(0, testbench);
        \mc = 0 ;
        \mp = 0 ;
        \clk = 0 ;
        \rst = 1 ;
        \start = 0 ;
        \sin = 0 ;
        \shift = 0 ;
        \tck = 0 ;
        \test = 0 ;

        #10;
        rst = ~rst;
        shift = 1;
        test = 1;
        for (i = 0; i < 332; i = i + 1) begin
            sin = serializable[i];
            #2;
        end
        #2;
        for (i = 0; i < 332; i = i + 1) begin
            serial[i] = sout;
            #2;
        end
        if (serial === serializable) begin
            $display("SUCCESS_STRING");
        end
        $finish;
    end
endmodule
