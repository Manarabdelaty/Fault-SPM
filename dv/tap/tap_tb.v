/*
    Automatically generated by Fault
    Do not modify.
    Generated on: 2021-01-29 09:41:01
*/

`include "/home/ma/ef/openlane/pdks/sky130A/libs.ref/sky130_fd_sc_hd/verilog/primitives.v"
`include "/home/ma/ef/openlane/pdks/sky130A/libs.ref/sky130_fd_sc_hd/verilog/sky130_fd_sc_hd.v"
`include "/home/ma/ef/Fault-SPM/openlane/spm_top/runs/spm_top/results/dft/spm_top.tap.v"

module testbench;
    wire[0:0] \tdo ;
    reg[31:0] \mp ;
    wire[0:0] \done ;
    reg[0:0] \start ;
    wire[63:0] \prod ;
    reg[0:0] \rst ;
    reg[31:0] \mc ;
    wire[0:0] \tdo_paden_o ;
    reg[0:0] \tms ;
    reg[0:0] \tck ;
    reg[0:0] \tdi ;
    reg[0:0] \trst ;
    reg[0:0] \clk ;


    always #1 clk = ~clk;
    always #1 tck = ~tck;

    spm_top uut(
        .\tdo ( \tdo ) , .\mp ( \mp ) , .\done ( \done ) , .\start ( \start ) , .\prod ( \prod ) , .\rst ( \rst ) , .\mc ( \mc ) , .\tdo_paden_o ( \tdo_paden_o ) , .\tms ( \tms ) , .\tck ( \tck ) , .\tdi ( \tdi ) , .\trst ( \trst ) , .\clk ( \clk ) 
    );    

    integer i;

    wire[331:0] serializable =
        332'b01111000110000110000100001011010001111111101000101011111110010111100010010011110111011111011000111100000100111011011100010001101001100101111001011000000011000000011010011000111000010011001111111001101101001100000110011111101111110000010010111001101111010100111001011100001010110001100001001110001000100101111100111111100011001000110;
    reg[331:0] serial;

    wire[7:0] tmsPattern = 8'b 01100110;
    wire[3:0] preload_chain = 4'b0011;

    initial begin
        // $dumpfile("dut.vcd");
        // $dumpvars(0, testbench);
        \mc = 0 ;
        \mp = 0 ;
        \clk = 0 ;
        \rst = 1 ;
        \start = 0 ;
        \tms = 0 ;
        \tck = 0 ;
        \tdi = 0 ;
        \trst = 0 ;

        tms = 1;
        #150;
        rst = ~rst;
        trst = 1;        
        #150;

        /*
            Test PreloadChain Instruction
        */
        shiftIR(preload_chain);
        enterShiftDR();

        for (i = 0; i < 332; i = i + 1) begin
            tdi = serializable[i];
            #2;
        end
        #3;
        for(i = 0; i< 332; i = i + 1) begin
            serial[i] = tdo;
            #2;
        end 

        if(serial !== serializable) begin
            $error("EXECUTING_PRELOAD_CHAIN_INST_FAILED");
            $finish;
        end
        exitDR();
        #2;

        $display("SUCCESS_STRING");
        $finish;
    end

    task shiftIR;
        input[3:0] instruction;
        integer i;
        begin
            for (i = 0; i< 5; i = i + 1) begin
                tms = tmsPattern[i];
                #2;
            end

            // At shift-IR: shift new instruction on tdi line
            for (i = 0; i < 4; i = i + 1) begin
                tdi = instruction[i];
                if(i == 3) begin
                    tms = tmsPattern[5];     // exit-ir
                end
                #2;
            end

            tms = tmsPattern[6];     // update-ir 
            #2;
            tms = tmsPattern[7];     // run test-idle
            #6;
        end
    endtask

    task enterShiftDR;
        begin
            tms = 1;     // select DR
            #2;
            tms = 0;     // capture DR -- shift DR
            #4;
        end
    endtask

    task exitDR;
        begin
            tms = 1;     // Exit DR -- update DR
            #4;
            tms = 0;     // Run test-idle
            #2;
        end
    endtask
endmodule
